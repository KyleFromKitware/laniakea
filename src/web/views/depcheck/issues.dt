extends base

block head
    - auto title = "Depcheck Issues in " ~ suite.name;

block contents
    .d-flex.justify-content-between.flex-wrap.flex-md-nowrap.align-items-center.pt-3.pb-2.mb-3.border-bottom
        h1.h2 Package Dependency Issues for #{suite.name}

    - import laniakea.db.schema.debcheck;
    - import std.array : empty, join;
    - import std.algorithm : map;

    ul.nav.nav-tabs
        li(role='presentation', class='#{ (packageKind == PackageType.BINARY)? "active" : "" }')
            a(href='../binary') Binary Packages
        li(role='presentation', class='#{ (packageKind == PackageType.SOURCE)? "active" : "" }')
            a(href='../source') Source Packages

    br

    .row
        .col-md-8
            - if (issues.empty)
                .alert.alert-success(role='alert')
                    span.fa.fa-check(aria-hidden='true')
                    |  We have found no problems. Great!

            .dropdown
                button#archSelectButton.btn.btn-secondary.dropdown-toggle(type='button', data-toggle='dropdown', aria-haspopup='true', aria-expanded='false')
                    | Architecture
                .dropdown-menu(aria-labelledby='archSelectButton')
                    - foreach (ref a; suite.architectures)
                        a.dropdown-item(href='../#{a.name}/1') #{a.name}

            .list-group
                - foreach (issue; issues)
                    a.list-group-item(href='#{issue.packageName}/#{issue.packageVersion}')
                        h4.list-group-item-heading= issue.packageName
                        p.list-group-item-text Architecture: #{issue.architecture}
                        - if (!issue.missing.empty)
                            p.list-group-item-text Missing: #{issue.missing.map!(p => p.unsatDependency).join (" ")}
                        - if (!issue.conflicts.empty)
                            p.list-group-item-text Conflict: #{issue.conflicts.map!(c => c.pkg1.packageName ~ " vs. " ~ c.pkg2.packageName).join (", ")}


    nav(aria-label='Page navigation')
        ul.pagination
            li(class='#{(currentPage == 1)? "disabled" : ""}')
                a(href='#{(currentPage == 1)? "#" : (currentPage - 1).to!string}', aria-label='Previous')
                    span(aria-hidden='true') &laquo;
            - for (uint i = 1; i <= pageCount; i++)
                - if (i == currentPage)
                    li.active
                        a(href='#{i}')= i
                - else
                    li
                        a(href='#{i}')= i
            li(class='#{(currentPage >= pageCount)? "disabled" : ""}')
                a(href='#{(currentPage >= pageCount)? "#" : (currentPage + 1).to!string}', aria-label='Next')
                    span(aria-hidden='true') &raquo;
